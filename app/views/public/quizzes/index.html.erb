<!--<template>-->
  <!--<div class="container">-->
  <!--  <h1 class="text-center"><%#= @quiz.title %></h1>-->
  <!--  <div class="question-container">-->
  <!--    <div class="question-box">Q.<%#= @quiz.question %></div>-->

      <!-- 4択 -->
  <!--    <div id="answers">-->
  <!--      <div class="row">-->
  <!--        <div class="col-6">-->
  <!--          <button class="btn btn-primary d-block w-100 large dark">A. <%#= @quiz.answer1 %></button>-->
  <!--        </div>-->
  <!--        <div class="col-6">-->
  <!--          <button class="btn btn-primary d-block w-100 large dark">B. <%#= @quiz.answer2 %></button>-->
  <!--        </div>-->
  <!--      </div>-->

  <!--      <div class="row">-->
  <!--        <div class="col-6">-->
  <!--          <button class="btn btn-primary d-block w-100 large dark">C. <%#= @quiz.answer3 %></button>-->
  <!--        </div>-->
  <!--        <div class="col-6">-->
  <!--          <button class="btn btn-primary d-block w-100 large dark">D. <%#= @quiz.answer4 %></button>-->
  <!--        </div>-->
  <!--      </div>-->
  <!--    </div>-->

  <!--    <div class="answer-btn">-->
  <!--      <button class="btn btn-primary d-block w-100 large">回答する</button>-->
  <!--    </div>-->

  <!--    <div class="modal fade" id="resultModal" tabindex="-1" role="dialog" aria-labelledby="resultModalLabel" aria-hidden="true">-->
  <!--      <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">-->
  <!--        <div class="modal-content">-->
  <!--          <div class="modal-body">-->
  <!--            <div class="text-center">-->
  <!--              <div id="resultSuccessText" class="text-center text-success">〇正解！</div>-->
  <!--              <div id="resultFailureText" class="text-center text-danger">✖不正解</div>-->
  <!--              <div class="font-weight-bold text-center answer-text">正解は「<%#= @answerLabel %>」</div>-->
  <!--              <div class="pt-3 px-6"><%#= @quiz.description %></div>-->
  <!--              <div class="text-center mb-2">-->
  <!--                <button class="btn btn-primary large" data-dismiss="modal">次の問題</button>-->
  <!--              </div>-->
  <!--              <div class="text-center">-->
  <!--                <a href="/" class="btn btn-link">トップページへ</a>-->
  <!--              </div>-->
  <!--            </div>-->
  <!--          </div>-->
  <!--        </div>-->
  <!--      </div>-->
  <!--    </div>-->

  <!--  </div>-->
  <!--</div>-->
<!--</template>-->

<%= form_with url:answer_quiz_path(@random_quiz), method: :post do |f| %>
  <%= render 'public/quizzes/quiz', quiz: @random_quiz, f: f %>
<% end %>



<script lang="ts">
// import { Component, Vue } from 'vue-property-decorator'

// @Component
// export default class Quiz extends Vue {

//   quiz: any = {}
//   selectedAnswer: number | null = null
//   dialog: boolean = false
//   result: any = {
//     answer: null,
//     description: null,
//     next_quiz_id: null
//   }

      // def index
      //   @quiz = {}
      //   @selected_answer = nil
      //   @dialog = false
      //   @result = {
      //     answer: nil,
      //     description: nil,
      //     next_quiz_id: nil
      //   }
      // end

  // async getQuiz() {
  //   let params: any = {}
  //   params.title_id = this.$route.params.titleId
  //   params.quiz_id = this.$route.params.quizId ? this.$route.params.quizId : undefined
  //   const { data } = await this.axios.get(`/quiz`, { params })
  //   return data
  // }

        // def get_quiz
        //   title_id = params[:title_id]
        //   quiz_id = params[:quiz_id] ? params[:quiz_id] : nil
        //   data = Quiz.where(title_id: title_id, quiz_id: quiz_id)
        //   render json: data
        // end

  // selectAnswer(answer: number) {
  //   this.selectedAnswer = answer
  // }

        // def select_answer
        //   @selected_answer = params[:answer]
        // end


  // クイズの回答を送信する
  // async postAnswer() {
  //   const params = {
  //     quiz_id: this.quiz.id,
  //     answer: this.selectedAnswer
  //   }
  //   const { data } = await this.axios.post(`/quiz/answer`, { ...params })
  //   this.result = data
  //   this.dialog = true
  // }

        // def post_answer
        //   quiz_id = params[:quiz_id]
        //   answer = params[:answer]
        //   // # 必要な処理
        //   render json: result
        // end

  // get answerLabel() {
  //   return eval('this.quiz.answer' + this.result.answer)
  // }

        // def answer_label
        //   eval("quiz.answer#{result.answer}")
        // end

  // goToNextQuiz() {
  //   this.dialog = false
  //   if(this.result.next_quiz_id !== null) {
  //     this.$router.push('/quiz/' + this.$route.params.titleId + '/' + this.result.next_quiz_id)
  //   }
  // }

        // def go_to_next_quiz
        //   dialog = false
        //   if result[:next_quiz_id].present?
        //     redirect_to quiz_path(title_id: params[:title_id], quiz_id: result[:next_quiz_id])
        //   end
        // end

  // async mounted() {
  //   this.quiz = await this.getQuiz()
  // }

        // def mounted
        //   @quiz = get_quiz
        // end
}
</script>